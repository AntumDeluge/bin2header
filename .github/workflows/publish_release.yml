
name: Publish Release

on:
  push:
    tags:
      - 'v[0-9]*'

jobs:
  main:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up build dependencies
        run: |
          sudo apt install \
            g++ \
            g++-multilib-i686-linux-gnu \
            mingw-w64 \
            cmake

      - name: Set up environment
        run: |
          . "${{ github.workspace }}/info.cfg"
          ver="${VERSION}"
          pyver="${PYVERSION}"
          if [ ! -z ${PKGREV} ] && [ ${PKGREV} -gt 0 ]; then
            ver="${ver}-${PKGREV}"
            pyver="${pyver}-${PKGREV}"
          fi
          stage="${{ github.workspace }}/build/stage"
          mkdir -p "${stage}"
          cp "${{ github.workspace }}/LICENSE.txt" "${stage}"
          echo "ver=${ver}" >> $GITHUB_ENV
          echo "pyver=${pyver}" >> $GITHUB_ENV
          echo "stage=${stage}" >> $GITHUB_ENV

      - name: Compile ELF (Linux) 64-bit
        run: |
          dir_build="${{ github.workspace }}/build/linux64"
          mkdir -p "${dir_build}" && cd "${dir_build}"
          cmake \
            -DSTATIC=ON \
            "${{ github.workspace }}"
          cmake --build ./
          cp bin2header "${{ env.stage }}"

      - name: Package ELF (Linux) 64-bit
        run: |
          pkgname="bin2header_${{ env.ver }}_linux64.zip"
          cd "${{ env.stage }}"
          zip "${pkgname}" bin2header LICENSE.txt
          rm bin2header

      - name: Compile ELF (Linux) 32-bit
        run: |
          dir_build="${{ github.workspace }}/build/linux32"
          mkdir -p "${dir_build}" && cd "${dir_build}"
          cmake \
            -DCMAKE_TOOLCHAIN_FILE=cmake/toolchain-i686-linux-gnu.cmake \
            -DSTATIC=ON \
            "${{ github.workspace }}"
          cmake --build ./
          cp bin2header "${{ env.stage }}"

      - name: Package ELF (Linux) 32-bit
        run: |
          pkgname="bin2header_${{ env.ver }}_linux32.zip"
          cd "${{ env.stage }}"
          zip "${pkgname}" bin2header LICENSE.txt
          rm bin2header

      - name: Compile PE32 (Windows) 64-bit
        run: |
          dir_build="${{ github.workspace }}/build/win64"
          mkdir -p "${dir_build}" && cd "${dir_build}"
          cmake \
            -DCMAKE_TOOLCHAIN_FILE=cmake/toolchain-x86_64-w64-mingw32.cmake \
            -DSTATIC=ON \
            -DEMBED_ICON=ON \
            "${{ github.workspace }}"
          cmake --build ./
          cp bin2header.exe "${{ env.stage }}"

      - name: Package PE32 (Windows) 64-bit
        run: |
          pkgname="bin2header_${{ env.ver }}_win64.zip"
          cd "${{ env.stage }}"
          zip "${pkgname}" bin2header.exe LICENSE.txt
          rm bin2header.exe

      - name: Compile PE32 (Windows) 32-bit
        run: |
          dir_build="${{ github.workspace }}/build/win32"
          mkdir -p "${dir_build}" && cd "${dir_build}"
          cmake \
            -DCMAKE_TOOLCHAIN_FILE=cmake/toolchain-i686-w64-mingw32.cmake \
            -DSTATIC=ON \
            -DEMBED_ICON=ON \
            "${{ github.workspace }}"
          cmake --build ./
          cp bin2header.exe "${{ env.stage }}"

      - name: Package PE32 (Windows) 32-bit
        run: |
          pkgname="bin2header_${{ env.ver }}_win32.zip"
          cd "${{ env.stage }}"
          zip "${pkgname}" bin2header.exe LICENSE.txt
          rm bin2header.exe

      - name: Package Python
        run: |
          pkgname="bin2header_${{ env.pyver }}_python.tar"
          cd "${{ env.stage }}"
          cp "${{ github.workspace }}/src/bin2header.py" "${{ env.stage }}"
          tar -cf "${pkgname}" --mode=0755 bin2header.py
          tar -uf "${pkgname}" LICENSE.txt
          xz -z9 "${pkgname}"
          rm bin2header.py

      - name: Package source
        run: "${{ github.workspace }}/scripts/dist_source.sh"

      - name: Get changes
        run: sed -e '/^$/,$d' -e '1 s/^.*$/Changes:\n/' CHANGES.txt > release_notes.tmp

      - name: Publish
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: 'Version ${{ env.ver }}'
          body_path: release_notes.tmp
          files: |
            bin2header-${{ env.ver }}.tar.xz
            build/stage/bin2header_${{ env.ver }}_*.zip
            build/stage/bin2header_${{ env.pyver }}_python.tar.xz
          prerelease: true
